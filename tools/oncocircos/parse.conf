
<filter>
SNV_FILTER
SNV_FILTER_NUM
CHR
</filter>

<files>
ROOT
cnv = data/cnv.txt
cnvlg = data/cnv.large.scale.txt
sv = data/snv.txt
mart = data/biomart.txt
CIRCOS
mask = data/genes_to_hide.txt
genes = data/genes_to_label.txt
</files>


<map>
log2 = avg:sprintf("%.2f",2*2**x)
</map>

# 0-indexed column numbers and names
<fields>
<cnvlg>
key = chr
0   = chr
1   = start
2   = end
3   = type:lc
</cnvlg>
<cnv>
key = sample,chr
0   = sample 
1   = chr
2   = start
3   = end
# :map(x,y) will create a new field x based on intervals defined in a block
#
# e.g.
# value of 2*2**(log2) (see <map> block above) will be used to assign key "category"
# based on <cnv><log2> intervals
5   = log2:map(category,cnv/log2)
</cnv>
<sv>
key = id,sample
4   = chr
5   = start
6   = end
8   = type:lc
15  = sample
47  = id
53  = aa
</sv>
<genes>
key = chr
0   = id
3   = end
2   = start
1   = chr
4   = name
</genes>
</fields>

<cnv>
filter     = yes
<types>
amp   = 20
gain  = 15
neut  = 0
hetd  = 10
homd  = 5
hlamp = 0
</types>
# assign log2 ranges to CNV event categories
#
# ( indicates open interval
# [ indicates closed interval
#
# e.g. (1,2] is 1 <  x <= 2
#      [2,3) is 2 <= x <  3
#
# The intervals must be disjoint and completely cover
# all possible values you're going to test. 
<log2>
# max = category
(,1)  = homd
[1,2) = hetd
2     = neut
(2,3] = gain
(3,)  = amp
</log2>
</cnv>

<sv>
# only pay attention to SV types listed <types>
filter     = yes
# only consider the most damaging type of mutation in a patient
# (one with top score in <types> 
# the absolute value of the damage weight is unimportant, only order matters
top_damage_only   = yes
<types>
nonsense_mutation = 35
frame_shift_del   = 30
frame_shift_ins   = 25
in_frame_del      = 20
in_frame_ins      = 15
splice_site       = 10
nonstop_mutation  = 5
missense_mutation = 1
</types>
</sv>
